on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  NAMESPACE: default
  DOCKERHUB_REPO: katerinadud/nestjs-app

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest
            ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}

  deploy:
    needs: build_and_push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
        with: { version: "v1.30.0" }
      - name: Install kustomize
        run: |
          curl -sSL https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh | bash
          sudo mv kustomize /usr/local/bin/kustomize
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d > $HOME/.kube/config
      - name: Ensure namespace + redis secret
        run: |
          kubectl get ns ${{ env.NAMESPACE }} >/dev/null 2>&1 || kubectl create ns ${{ env.NAMESPACE }}
          kubectl -n ${{ env.NAMESPACE }} create secret generic redis-secret \
            --from-literal=REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}" \
            --dry-run=client -o yaml | kubectl apply -f -
      - name: Point manifests to freshly built image
        working-directory: k8s
        run: |
          kustomize edit set image ${{ env.DOCKERHUB_REPO }}=${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
      - name: Deploy
        run: |
          kustomize build k8s | kubectl apply -n ${{ env.NAMESPACE }} -f -
          kubectl -n ${{ env.NAMESPACE }} rollout status deploy/nestjs-app --timeout=180s
